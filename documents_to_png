import os
from pathlib import Path
import tempfile
import shutil

# Для обработки PDF
try:
    import fitz  # PyMuPDF
except ImportError:
    fitz = None

# Для обработки Office-документов
try:
    from docx2pdf import convert as docx2pdf_convert
    from comtypes import client
except ImportError:
    docx2pdf_convert = None
    client = None

def check_dependencies():
    """Проверяет наличие необходимых библиотек"""
    dependencies = []
    if fitz is None:
        dependencies.append('PyMuPDF')
    if docx2pdf_convert is None:
        dependencies.append('docx2pdf')
    if client is None:
        dependencies.append('comtypes')
    
    if dependencies:
        print(f"Отсутствуют библиотеки: {', '.join(dependencies)}")
        print("Установите их через pip:")
        print(f"pip install {' '.join(dependencies)}")
        return False
    return True

def convert_to_images(input_folder, output_folder, target_format='png'):
    """
    Конвертирует PDF, DOCX и Excel файлы в изображения
    используя только Python-библиотеки
    """
    if not check_dependencies():
        return

    input_path = Path(input_folder)
    output_path = Path(output_folder)
    output_path.mkdir(exist_ok=True)

    # Временная папка для промежуточных файлов
    with tempfile.TemporaryDirectory() as temp_dir:
        temp_path = Path(temp_dir)

        for file_path in input_path.glob('*.*'):
            if file_path.suffix.lower() in ['.pdf', '.docx', '.xlsx']:
                print(f"Обработка: {file_path.name}")

                try:
                    if file_path.suffix.lower() == '.pdf':
                        # Конвертируем PDF напрямую
                        pdf_to_images(file_path, output_path, target_format)
                    
                    elif file_path.suffix.lower() in ['.docx', '.xlsx']:
                        # Сначала конвертируем в PDF
                        pdf_temp_path = temp_path / f"{file_path.stem}.pdf"
                        convert_to_pdf(file_path, pdf_temp_path)
                        
                        # Затем конвертируем PDF в изображения
                        pdf_to_images(pdf_temp_path, output_path, target_format)
                        
                except Exception as e:
                    print(f"Ошибка при обработке {file_path.name}: {str(e)}")

def convert_to_pdf(input_file, output_file):
    """Конвертирует DOCX/XLSX в PDF используя comtypes"""
    try:
        # Инициализация COM-объекта Word/Excel
        if input_file.suffix.lower() == '.docx':
            word = client.CreateObject("Word.Application")
            word.Visible = False
            doc = word.Documents.Open(str(input_file))
            doc.SaveAs(str(output_file), FileFormat=17)
            doc.Close()
            word.Quit()
        
        elif input_file.suffix.lower() == '.xlsx':
            excel = client.CreateObject("Excel.Application")
            excel.Visible = False
            wb = excel.Workbooks.Open(str(input_file))
            wb.ExportAsFixedFormat(0, str(output_file))
            wb.Close()
            excel.Quit()
            
    except Exception as e:
        raise Exception(f"Ошибка конвертации в PDF: {str(e)}")

def pdf_to_images(pdf_path, output_path, target_format='png'):
    """Конвертирует PDF в изображения используя PyMuPDF"""
    try:
        doc = fitz.open(pdf_path)
        for page_num in range(len(doc)):
            page = doc.load_page(page_num)
            mat = fitz.Matrix(2.0, 2.0)  # Увеличиваем разрешение
            pix = page.get_pixmap(matrix=mat, alpha=False)
            
            output_file = output_path / f"{pdf_path.stem}_page_{page_num+1}.{target_format}"
            pix.save(output_file)
        
        doc.close()
    except Exception as e:
        raise Exception(f"Ошибка конвертации PDF: {str(e)}")

if __name__ == "__main__":
    input_folder = "/путь/к/исходной/папке"
    output_folder = "/путь/к/папке/для/изображений"
    
    convert_to_images(input_folder, output_folder)